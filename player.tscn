[gd_scene load_steps=10 format=3 uid="uid://b3dx313hunr6x"]

[ext_resource type="AudioStream" uid="uid://ddirj4kpjphcn" path="res://sword-stab-push-melee-weapon-236206.wav" id="1_bapjg"]

[sub_resource type="GDScript" id="GDScript_xjxik"]
script/source = "extends CharacterBody3D

@export var health:int = 100

@onready var camera_3d: Camera3D = $Camera3D
@onready var animation_player: AnimationPlayer = $AnimationPlayer
@onready var audio_stream_player: AudioStreamPlayer = $AudioStreamPlayer
@onready var hitbox: Area3D = $Camera3D/WeaponPivot/WeaponMesh/Hitbox

const SPEED = 5.0
const JUMP_VELOCITY = 4.5

func _ready() -> void:
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED

func _process(_delta: float) -> void:
	if Input.is_action_just_pressed(\"quit\"):
		get_tree().quit()
		
	if Input.is_action_just_pressed(\"attack\"):
		if not animation_player.current_animation == \"attack\":
			animation_player.play(\"attack\")
			audio_stream_player.play()
			hitbox.monitoring = true

func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		rotate_y(-event.relative.x * 0.005)
		camera_3d.rotate_x(-event.relative.y * 0.005)
		camera_3d.rotation.x = clamp(camera_3d.rotation.x, -(PI/4), PI/4)

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"left\", \"right\", \"forward\", \"back\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()


func _on_animation_player_animation_finished(anim_name: StringName) -> void:
	if anim_name == \"attack\":
		animation_player.play(\"idle\")
		hitbox.monitoring = false


func _on_hitbox_area_entered(area: Area3D) -> void:
	if area.is_in_group(\"enemy\"):
		print(\"enemy hit\")
		if area.has_method(\"take_damage\"):
			area.take_damage(25)
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_c2cqr"]

[sub_resource type="BoxMesh" id="BoxMesh_mn4p3"]
size = Vector3(0.1, 1, 0.1)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_h4tkh"]
points = PackedVector3Array(0.05, 0.479005, 0.05, -0.0579256, -0.507937, -0.0579256, -0.0579256, -0.507937, 0.0531637, 0.0531637, -0.507937, -0.0579256, -0.0579256, 0.507937, -0.0579256, -0.0579256, 0.507937, 0.0531637, 0.0531637, 0.507937, -0.0579256, 0.05, -0.479005, 0.05)

[sub_resource type="Animation" id="Animation_0sgbw"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D/WeaponPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera3D/WeaponPivot/WeaponMesh:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0.444926, -0.315973, -0.875298)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Camera3D/WeaponPivot/WeaponMesh:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(-0.445583, 0, 0)]
}

[sub_resource type="Animation" id="Animation_j07vj"]
resource_name = "attack"
length = 0.7
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D/WeaponPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.7),
"transitions": PackedFloat32Array(1, -2),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera3D/WeaponPivot/WeaponMesh:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.3, 0.466667, 0.7),
"transitions": PackedFloat32Array(-2, 1, 1, -2),
"update": 0,
"values": [Vector3(0.444926, -0.315973, -0.875298), Vector3(0.849802, -0.315973, -0.875298), Vector3(-0.332657, -0.315973, -0.59817), Vector3(0.543176, -0.315973, -0.875298)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Camera3D/WeaponPivot/WeaponMesh:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.3, 0.466667, 0.7),
"transitions": PackedFloat32Array(-2, 1, 1, -2),
"update": 0,
"values": [Vector3(-0.445583, 0, 0), Vector3(-0.863283, -0.872799, -0.346172), Vector3(-0.997776, -0.116438, 0.962222), Vector3(-0.437695, -0.130637, -0.201367)]
}

[sub_resource type="Animation" id="Animation_c161g"]
resource_name = "idle"
length = 3.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D/WeaponPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera3D/WeaponPivot/WeaponMesh:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1.5),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector3(0.444926, -0.315973, -0.875298), Vector3(0.444926, -0.466683, -0.875298)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Camera3D/WeaponPivot/WeaponMesh:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 1.5),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector3(-0.445583, 0, 0), Vector3(-0.424648, -0.139284, 0.327983)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_7fe4c"]
_data = {
"RESET": SubResource("Animation_0sgbw"),
"attack": SubResource("Animation_j07vj"),
"idle": SubResource("Animation_c161g")
}

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_xjxik")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("CapsuleShape3D_c2cqr")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.44635, 0)

[node name="WeaponPivot" type="Node3D" parent="Camera3D"]

[node name="WeaponMesh" type="MeshInstance3D" parent="Camera3D/WeaponPivot"]
transform = Transform3D(1, 0, 0, 0, 0.902359, 0.430984, 0, -0.430984, 0.90236, 0.444926, -0.315973, -0.875298)
mesh = SubResource("BoxMesh_mn4p3")

[node name="Hitbox" type="Area3D" parent="Camera3D/WeaponPivot/WeaponMesh"]
monitoring = false

[node name="CollisionShape3D" type="CollisionShape3D" parent="Camera3D/WeaponPivot/WeaponMesh/Hitbox"]
shape = SubResource("ConvexPolygonShape3D_h4tkh")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_7fe4c")
}
autoplay = "idle"
playback_default_blend_time = 0.1

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource("1_bapjg")

[connection signal="area_entered" from="Camera3D/WeaponPivot/WeaponMesh/Hitbox" to="." method="_on_hitbox_area_entered"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
